<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.10</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.infosys</groupId>
	<artifactId>movieSystems</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>movieSystems</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>22</java.version>
	</properties>
	<dependencies>
		
		
		<!--provides the necessary libraries and configuration to easily 
		integrate Java Persistence API (JPA) and Hibernate into a 
		Spring Boot application for database operations.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		
		
		<!--provides the necessary libraries and configuration to 
		add authentication, authorization, and security features 
		to a Spring Boot application.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		
		
		<!--provides the necessary libraries and configuration 
		to build web applications, including RESTful services, 
		using Spring MVC and embedded servers like Tomcat.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		



		<!--provides the MySQL JDBC driver needed for connecting 
		a Spring Boot application to a MySQL database at runtime.-->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		
		
		<!--provides the embedded Tomcat server for 
		running Spring Boot applications-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		
		
		
		<!--provides the necessary libraries and tools for 
		testing Spring Boot applications, including JUnit, 
		Mockito, and Spring Test-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		
		
		
		<!--provides support for testing Spring Security features, 
		such as authentication and authorization, in Spring Boot applications-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		
		
		<!--Provides the Servlet API required for web applications-->
		<!--<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>4.0.1</version>
		<scope>provided</scope>
		</dependency>-->
		
		<!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
<dependency>
    <groupId>jakarta.servlet</groupId>
    <artifactId>jakarta.servlet-api</artifactId>
    
</dependency>

		
	<!--Provides Jasper, the JSP engine for Apache Tomcat, 
	allowing JSP pages to be compiled and served by an 
	embedded Tomcat server	-->
	<dependency>
	<groupId>org.apache.tomcat.embed</groupId>
	<artifactId>tomcat-embed-jasper</artifactId>
	<scope>provided</scope>
	</dependency>
	
	<dependency>
	<groupId>javax.validation</groupId>
	<artifactId>validation-api</artifactId>
	<version>2.0.1.Final</version>
	</dependency>
 
	
	
	<!--Provides the JSTL API, which includes a set of standard tags 
	to simplify the use of JSP pages, allowing logic and iteration 
	over data structures within JSP-->
	<dependency>
	<groupId>jakarta.servlet.jsp.jstl</groupId>
	<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
	<version>3.0.0</version>
	</dependency>
	<dependency>
<groupId>org.glassfish.web</groupId>
<artifactId>jakarta.servlet.jsp.jstl</artifactId>
<version>3.0.1</version>
</dependency>


	</dependencies>






	<!--is used to package and run Spring Boot applications with Maven. 
	It simplifies the build process by enabling features like creating 
	executable JARs or WARs, running the application directly from the 
	command line, and managing dependencies and classpaths during builds.-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
